---
- name: Creates Hail's Jupyter Notebook directories
  file:
    path: "{{ jupyter_dir }}"
    state: directory
    owner: "{{ jupyter_install_owner }}"
    group: "{{ jupyter_install_group }}"
  loop:
    - "{{ jupyter_install_dir }}/jupyter"
    - "{{ jupyter_install_dir }}/jupyter/config"
    - "{{ jupyter_install_dir }}/jupyter/data"
  loop_control:
    loop_var: jupyter_dir

- name: Install Hail's Jupyter Notebook service
  template:
    src: jupyter-notebook.service.j2
    dest: /etc/systemd/system/jupyter-notebook.service

- name: Install Hail's Jupyter Notebook bash profile
  template:
    src: profile.sh.j2
    dest: /etc/profile.d/50-jupyeter.sh
    mode: 0644

- name: Install Hail's Jupyter Notebook configuration file
  become: yes
  template:
    src: jupyter-config-service.py.j2
    dest: "{{ jupyter_install_dir }}/jupyter/config/service.py"
    owner: "{{ jupyter_install_owner }}"
    group: "{{ jupyter_install_group }}"
    mode: 0600

- name: Create data volume LUKS keyfile
  copy:
    dest: "{{ jupyter_data_keyfile }}"
    content: "{{ jupyter_data_password }}"
    mode: "0600"
  no_log: true

- name: Get data volume info
  parted:
    device: "{{ jupyter_data_volume }}"
    state: info
  register: jupyter_data_info

- name: Create data volume partition
  parted:
    device: "{{ jupyter_data_volume }}"
    state: present
    label: gpt
    name: jupyter_data
    number: 1
    part_type: primary
  when: jupyter_data_info.partitions == []

- name: Ensure LUKS container is configured on extra volumes
  luks_device:
    state: present
    device: "{{ jupyter_data_volume }}1"
    name: jupyter_data
    keyfile: "{{ jupyter_data_keyfile }}"
  no_log: true

- name: Ensure LUKS containers are configured in crypttab
  crypttab:
    state: present
    name: /dev/mapper/jupyter_data
    password: "{{ jupyter_data_keyfile }}"
    backing_device: "{{ jupyter_data_volume }}1"
  no_log: true

- name: Let SystemD create new services based on the new entries in crypttab
  systemd:
    daemon_reload: yes

- name: Ensure SystemD services handles LUKS containers
  service:
    name: "systemd-cryptsetup@jupyter_data"
    enabled: yes
    state: started

- name: Ensure that a filesystem exists on extra volumes
  filesystem:
    dev: "/dev/mapper/jupyter_data"
    force: no
    type: ext4
  when: jupyter_data_info.partitions == []

- name: Ensure Jupyter data directory exists
  file:
    state: directory
    path: "{{ jupyter_install_dir }}/jupyter/data"

- name: Mount extra volumes
  mount:
    state: mounted
    src: "/dev/mapper/jupyter_data"
    fstype: "ext4"
    path: "{{ jupyter_install_dir }}/jupyter/data"
    opts: "uid={{ jupyter_install_owner }},gid={{ jupyter_install_group }}"

- name: Ensure Jupyter data directory correct ownership and permission
  file:
    state: directory
    path: "{{ jupyter_install_dir }}/jupyter/data"
    mode: "0700"
    owner: "{{ jupyter_install_owner }}"
    group: "{{ jupyter_install_group }}"

- name: Enable and start Hail's Jupyter Notebook service
  become: yes
  service:
    name: jupyter-notebook
    enabled: yes
    state: started
